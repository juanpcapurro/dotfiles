#!/bin/bash

set -eu

# dependencies: jq, rsync, yt-dlp

# this script creates an rss feed for a youtube (or similar) channel
# expects a metadata file like the following:

# {
#   "description": "Un stream mirroreado como podcast en la web libre",
#   "title": "fixie life by farfan",
#   "link": "https://www.youtube.com/channel/UCwqNoD7cnB43zae2Y5TEanw",
#   "author": "Andres C Farfan",
#   "host": "https://static.capu.tech/other/farfan",
#   "fileserver": "selfhost:/var/www/static.capu.tech/other/farfan/",
#   "image": "TODO" -- I should add support for images, it probably hinders
#   indexing in 'popular' podcasting 'apps'
# }

METADATA="metadata.json"
OUTPUT="feed.xml"

# dependencies: jq, coreutils, 

function write_header (){
  cat  >> "$OUTPUT" <<-EOF 
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:admin="http://webns.net/mvcb/" xmlns:atom="http://www.w3.org/2005/Atom/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" version="2.0">
  <channel>
    <title>$(jq -r ".description" < "$METADATA")</title>
    <link>$(jq -r ".link" < "$METADATA")</link>
    <pubDate>$(date -R)</pubDate>
EOF
}

function fetch_episodes () {
  yt-dlp --restrict-filenames -o "./%(upload_date)s-%(title)s" -f 'bestaudio' -x --audio-format mp3 "$(jq -r ".link" < $METADATA)"
}

function write_items() {
  for episode_file in *.mp3 ; do
    url=$(jq -r '.host' < $METADATA)/$episode_file
    length=$(ls -l "$episode_file" | cut -f 5 -d ' ')
    title=$(ls "$episode_file" | cut -f 2- -d '-' |cut -f 1 -d . |tr _ ' ')
    pubdate=$(date -R "-d${episode_file%%-*}")
    image=$(jq -r ".image" < $METADATA)
    cat  >> "$OUTPUT" <<-EOF 
    <item>
      <title>$title</title>
      <description>PRs welcome</description>
      <pubDate>$pubdate</pubDate>
      <enclosure url="$url" length="$length" type="audio/mp3"/>
      <itunes:image href="$image"/>
    </item>
EOF
  done
}

function write_footer() {
  cat  >> "$OUTPUT"<<-EOF 
  </channel>
</rss>
EOF
}

function upload() {
  rsync -av $OUTPUT *.mp3 "$(jq -r ".fileserver" < "$METADATA")"
}

rm ${OUTPUT}.old 2>/dev/null|| true
mv $OUTPUT ${OUTPUT}.old 2>/dev/null || true

fetch_episodes
write_header
write_items
write_footer
upload
